#!/usr/bin/env node

/**
 * Simple HTTP Server for Testing card.html
 * 
 * Usage:
 *   node test-server.js
 *   
 * Then open: http://localhost:8080/card.html
 * Run Lighthouse in Chrome DevTools
 */

const http = require('http');
const fs = require('fs');
const path = require('path');

const PORT = 8080;

// MIME types for different file extensions
const MIME_TYPES = {
    '.html': 'text/html',
    '.css': 'text/css',
    '.js': 'text/javascript',
    '.json': 'application/json',
    '.png': 'image/png',
    '.jpg': 'image/jpeg',
    '.jpeg': 'image/jpeg',
    '.webp': 'image/webp',
    '.avif': 'image/avif',
    '.gif': 'image/gif',
    '.svg': 'image/svg+xml',
    '.ttf': 'font/ttf',
    '.otf': 'font/otf',
    '.woff': 'font/woff',
    '.woff2': 'font/woff2',
};

const server = http.createServer((req, res) => {
    // Security: prevent directory traversal
    const sanitizedUrl = req.url.split('?')[0].replace(/\.\./g, '');
    const filePath = path.join(__dirname, sanitizedUrl === '/' ? 'card.html' : sanitizedUrl);
    const ext = path.extname(filePath).toLowerCase();
    const mimeType = MIME_TYPES[ext] || 'application/octet-stream';

    // Read and serve file
    fs.readFile(filePath, (err, data) => {
        if (err) {
            if (err.code === 'ENOENT') {
                res.writeHead(404, { 'Content-Type': 'text/html' });
                res.end('<h1>404 Not Found</h1><p>The requested file was not found.</p>');
            } else {
                res.writeHead(500, { 'Content-Type': 'text/html' });
                res.end('<h1>500 Internal Server Error</h1>');
            }
            console.error(`‚ùå Error serving ${filePath}: ${err.message}`);
        } else {
            // Serve file with appropriate headers
            res.writeHead(200, {
                'Content-Type': mimeType,
                'Cache-Control': 'no-cache', // For testing purposes
            });
            res.end(data);
            console.log(`‚úÖ Served: ${sanitizedUrl} (${(data.length / 1024).toFixed(2)} KB)`);
        }
    });
});

server.listen(PORT, () => {
    console.log(`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                                ‚ïë
‚ïë  üöÄ Test Server Running                                        ‚ïë
‚ïë                                                                ‚ïë
‚ïë  URL:    http://localhost:${PORT}/card.html                     ‚ïë
‚ïë                                                                ‚ïë
‚ïë  üìä To run Lighthouse:                                         ‚ïë
‚ïë     1. Open the URL above in Google Chrome                     ‚ïë
‚ïë     2. Press F12 to open DevTools                              ‚ïë
‚ïë     3. Click the "Lighthouse" tab                              ‚ïë
‚ïë     4. Select all categories                                   ‚ïë
‚ïë     5. Click "Analyze page load"                               ‚ïë
‚ïë                                                                ‚ïë
‚ïë  ‚èπ  Press Ctrl+C to stop the server                           ‚ïë
‚ïë                                                                ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    `);
    console.log('Server logs:');
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
});

// Graceful shutdown
process.on('SIGINT', () => {
    console.log('\n\nüõë Server stopped');
    process.exit(0);
});

// Error handling
server.on('error', (err) => {
    if (err.code === 'EADDRINUSE') {
        console.error(`\n‚ùå Port ${PORT} is already in use. Please try a different port.`);
        console.error(`   You can modify the PORT variable in this script.\n`);
    } else {
        console.error(`\n‚ùå Server error: ${err.message}\n`);
    }
    process.exit(1);
});

